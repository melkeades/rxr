{
    "sourceFile": "src/App.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1698171197982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698171685066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,10 +40,8 @@\n       }}\n     >\n       <button onClick={enterAR}>Enter VR</button>\n       <XRCanvas events={clippingEvents} gl={{ localClippingEnabled: true }}>\n-        {/* <XR /> */}\n-        {/* <XWebPointers /> */}\n         <OrbitControls enableRotate={orbitControl} />\n         <ambientLight intensity={0.3} />\n         <directionalLight castShadow position={[1, 2, 3]} intensity={2} />\n         {/* <ImmersiveSessionOrigin position={[0, 0, 4]}> */}\n@@ -60,13 +58,10 @@\n             <PointerController id={getInputSourceId(inputSource)} key={getInputSourceId(inputSource)} inputSource={inputSource}></PointerController>\n           )\n         )}\n         <Dome photoIndex={photoIndex} setPhotoIndex={setPhotoIndex} />\n-        {/* {useXR.getState().mode === 'none' ? <Hud setPhotoIndex={setPhotoIndex} setOrbitControl={setOrbitControl} /> : ''} */}\n-        {/* <UI /> */}\n+        \n \n-        <Hud setPhotoIndex={setPhotoIndex} setOrbitControl={setOrbitControl} />\n-        {/* </ImmersiveSessionOrigin> */}\n       </XRCanvas>\n     </div>\n   )\n }\n"
                },
                {
                    "date": 1698175719953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         display: 'flex',\n         flexDirection: 'column',\n       }}\n     >\n-      <button onClick={enterAR}>Enter VR</button>\n+      <button className=\"btn\" onClick={enterAR}>Enter VR</button>\n       <XRCanvas events={clippingEvents} gl={{ localClippingEnabled: true }}>\n         <OrbitControls enableRotate={orbitControl} />\n         <ambientLight intensity={0.3} />\n         <directionalLight castShadow position={[1, 2, 3]} intensity={2} />\n"
                }
            ],
            "date": 1698171197982,
            "name": "Commit-0",
            "content": "import { OrbitControls, useTexture } from '@react-three/drei'\nimport { Canvas } from '@react-three/fiber'\nimport { XRCanvas, PointerHand, PointerController } from '@coconut-xr/natuerlich/defaults'\nimport { RootText, clippingEvents } from '@coconut-xr/koestlich'\nimport { getInputSourceId } from '@coconut-xr/natuerlich'\nimport { XWebPointers } from '@coconut-xr/xinteraction/react'\nimport { useEnterXR, NonImmersiveCamera, ImmersiveSessionOrigin, useInputSources, XR, useXR } from '@coconut-xr/natuerlich/react'\nimport { useState } from 'react'\nimport Glass from './Glass'\nimport Hud from './Hud'\nimport Dome from './Dome'\n\nconst sessionOptions = {\n  requiredFeatures: ['local-floor'],\n  // requiredFeatures: ['local-floor', 'hand-tracking'],\n}\n\nfunction UI() {\n  const [blue, setBlue] = useState(false)\n  return (\n    <RootText onClick={() => setBlue((blue) => !blue)} anchorX=\"center\" anchorY=\"center\" padding={0.05} backgroundColor={blue ? 'blue' : 'green'}>\n      Hello World\n    </RootText>\n  )\n}\n\nexport default function Index() {\n  const enterAR = useEnterXR('immersive-vr', sessionOptions)\n  const inputSources = useInputSources()\n\n  const [orbitControl, setOrbitControl] = useState(true)\n  const [photoIndex, setPhotoIndex] = useState(0)\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        inset: 0,\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <button onClick={enterAR}>Enter VR</button>\n      <XRCanvas events={clippingEvents} gl={{ localClippingEnabled: true }}>\n        {/* <XR /> */}\n        {/* <XWebPointers /> */}\n        <OrbitControls enableRotate={orbitControl} />\n        <ambientLight intensity={0.3} />\n        <directionalLight castShadow position={[1, 2, 3]} intensity={2} />\n        {/* <ImmersiveSessionOrigin position={[0, 0, 4]}> */}\n        {inputSources.map((inputSource) =>\n          inputSource.hand != null ? (\n            <PointerHand\n              id={getInputSourceId(inputSource)}\n              key={getInputSourceId(inputSource)}\n              inputSource={inputSource}\n              hand={inputSource.hand}\n              childrenAtJoint=\"wrist\"\n            ></PointerHand>\n          ) : (\n            <PointerController id={getInputSourceId(inputSource)} key={getInputSourceId(inputSource)} inputSource={inputSource}></PointerController>\n          )\n        )}\n        <Dome photoIndex={photoIndex} setPhotoIndex={setPhotoIndex} />\n        {/* {useXR.getState().mode === 'none' ? <Hud setPhotoIndex={setPhotoIndex} setOrbitControl={setOrbitControl} /> : ''} */}\n        {/* <UI /> */}\n        \n        <Hud setPhotoIndex={setPhotoIndex} setOrbitControl={setOrbitControl} />\n        {/* </ImmersiveSessionOrigin> */}\n      </XRCanvas>\n    </div>\n  )\n}\n"
        }
    ]
}